name: Bootstrap

on:
  workflow_dispatch: # Manual trigger

env:
  workspace: ${{ github.ref_name }}
  GH_TOKEN: ${{ github.token }}
  TF_VAR_region: eu-north-1
  TF_VAR_organization: carlssonk
  TF_VAR_repository: terraform-aws-infra
  TF_VAR_backend_bucket_name: terraform-state-bucket
  TF_VAR_backend_table_name: terraform-lock-table

jobs:
  bootstrap:
    name: Bootstrap
    runs-on: ubuntu-latest
    environment: ${{ env.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.BOOTSTRAP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BOOTSTRAP_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TF_VAR_region }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Check if Terraform backend exists
        id: check_backend
        run: |
          BUCKET_NAME="${{ env.TF_VAR_organization }}-${{ env.TF_VAR_backend_bucket_name }}-${{ env.workspace }}"
          TABLE_NAME="${{ env.TF_VAR_organization }}-${{ env.TF_VAR_backend_table_name }}-${{ env.workspace }}"
          
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null && \
              aws dynamodb describe-table --table-name "$TABLE_NAME" 2>/dev/null; then
            echo "backend_exists=true" >> $GITHUB_OUTPUT
          else
            echo "backend_exists=false" >> $GITHUB_OUTPUT
          fi
    
      - name: Setup Backend
        if: steps.check_backend.outputs.backend_exists == 'false'
        run: |
          terraform init
          terraform workspace new ${{ env.workspace }}
          terraform apply -auto-approve
        working-directory: ./bootstrap/setup-backend

      - name: Delay for 5 seconds
        if: steps.check_backend.outputs.backend_exists == 'false'
        run: sleep 5

      - name: Setup OIDC
        run: |
          terraform init \
            -backend-config=../../backend-config.hcl \
            -backend-config="region=${{ env.TF_VAR_region }}" \
            -backend-config="bucket=${{ env.TF_VAR_organization }}-${{ env.TF_VAR_backend_bucket_name }}-${{ env.workspace }}" \
            -backend-config="dynamodb_table=${{ env.TF_VAR_organization }}-${{ env.TF_VAR_backend_table_name }}-${{ env.workspace }}" \
            -backend-config="key=bootstrap/terraform.tfstate"
          terraform workspace new ${{ env.workspace }}
          terraform apply -auto-approve
        working-directory: ./bootstrap/setup-oidc