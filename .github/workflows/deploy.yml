name: Upsert Infrastructure

on:
  push:
    branches: [prod, dev]

env:
  TF_VAR_region: eu-north-1
  TF_VAR_organization: carlssonk
  TF_VAR_environment: ${{ github.ref_name }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TF_VAR_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Check if Terraform backend exists
        id: check_backend
        run: |
          BUCKET_NAME="${{ env.TF_VAR_organization }}-terraform-state-bucket-${{ env.TF_VAR_environment }}"
          TABLE_NAME="${{ env.TF_VAR_organization }}-terraform-lock-table-${{ env.TF_VAR_environment }}"
          
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null && \
             aws dynamodb describe-table --table-name "$TABLE_NAME" 2>/dev/null; then
            echo "backend_exists=true" >> $GITHUB_OUTPUT
          else
            echo "backend_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Bootstrap Backend
        if: steps.check_backend.outputs.backend_exists == 'false'
        run: |
          cd bootstrap
          terraform init
          terraform apply -auto-approve

      - name: Init and Apply
        run: |
          terraform init \
            -backend-config=backend-config.hcl \
            -backend-config="region=${{ env.TF_VAR_region }}" \
            -backend-config="bucket=${{ env.TF_VAR_organization }}-terraform-state-bucket-${{ env.TF_VAR_environment }}" \
            -backend-config="dynamodb_table=${{ env.TF_VAR_organization }}-terraform-lock-table-${{ env.TF_VAR_environment }}"
          terraform apply -auto-approve